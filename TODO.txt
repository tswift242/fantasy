Revisions/Refactoring:

In Progress: -- create listeners for all UI components: ***********fix NPE in ResultsLogger: *****create RuleMap -> String[] converter
********** modify run() to update PlayersPanel
*****-- sort players in PlayersPanel by score on an evaluation

*******remove warnings
****************************swap order of Kick.PAT_MS to be with other "miss" constants
**********************search out all System.out/err.println and replace with logger.warn/error()
**********remove EnumUtil.fromString() and replace with Enum.valueOf()
******use diamond operator with generics
-- flag for cmd line vs GUI in main class
-- make getValueText() method for Rule & getDefaultRule() method for model, which are used in setting default value of rule text field
-- create JPanel subclass or Util for repeated grid bag layout code

--seperate Jpanel constructors into multiple helper methods (consult Java examples, e.g. TabDemo.java)
--Model: look into creating separate package which encapsulates things like players list so that duplication is less apparent. ***Look into using only one list of players by modifying Player.java
	************-- make Player have map of RulesMap -> score; need way to specify which one is active --> active RulesMap field?

-- comment out Modes.ALL??
-- look into computing entire RuleMap in one call of parseScoringRules()
*******-- rename football/ to customerscorer/??

**** call static method of generic type
**** reuse abstract method code
-- avoid code repetition in argument validation in Player subclasses
-- avoid code repetition in field code in Player subclasses (keep first field in subclasses and put methods for all other fields in Player?)
-- make categoriesToString() static
-- get rid of getYardsUnit() in categories classes?
-- work on cmd line interface?
***** cmd line flags

New features:
-- Metrics
-- Get player stats from online source (e.g. nfl.com)
-- GUI?
***** use MVC!!!!!
***** tabs/radio button for position (include all as option)
***** side-by-side grids, each with own edit boxes for scoring coeffs within each tab
***** default scoring coeffs from nfl.com; button to revert to default coeffs
***** capability to remember smallest/largest metric value (display min/max/mean?)
***** solve for best coeffs based on some reference player rankings
***** option to update player data/choose stats year?




***************************************************************************************
Option 1: update Rules using RuleListener each time user types in rule text field

Pros:
--work distributed throughout execution, instead of being done all at once (--> avoid potential lag)

Cons:
--need to be able to pass TextFields up through JPanels to View for adding listeners

Notes:
***--COMPILATION ISSUES!!!!!!! -- RulesListener doesn't have static typing info for Rule<T>


Option 2: update Rules using RecalcScoreListener, only when user his "recalculate score" button

Pros:
--more efficient, especially if user plays around with same rule

Cons:

Notes:
grab ScorerPanel from JButton in ActionEvent using SwingUtilities.getAncestorOfClass()





********Both options: probably need to drop Enum<T> static typing from RuleMap, Rule, TypedValue (maybe more)
--Option 1: change generic typing to drop Enum<T> where possible
%%% getEnumConstants() in: StatTypeRulesPanel, EnumUtil, PlayersUtil (***runtime method, so it's fine it not statically declared Enum)
--Option 2: make type-safe class for heterogenious List of RuleTextFields a la RuleMap
